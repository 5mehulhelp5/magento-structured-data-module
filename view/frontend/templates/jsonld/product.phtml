<?php $pricingHelper = $block->getData('viewModel') ?>
<?php $children = $block->getChildren(); ?>
{
    "@context": "https://schema.org/",
    "@type": "Product",
    "@id": "<?= /* @noEscape */ strtok($block->getProduct()->getUrlInStore(), '?'); ?>#Product",
    <?php if ($block->getBrand()): ?>
        "brand": {
            "@type": "Brand",
            "name": "<?= /* @escapeNotVerified */  $block->stripTags($block->getBrand()); ?>"
        },
    <?php endif; ?>
    <?php if ($block->getReviewsCount()): ?>
        "aggregateRating": {
            "@type": "AggregateRating",
            "bestRating": "5",
            "worstRating": "1",
            "ratingValue": "<?= $block->getReviewsRating(); ?>",
            "reviewCount": "<?= $block->getReviewsCount(); ?>"
        },
    <?php endif; ?>
    <?php if ($block->getProduct()->getMpn()): ?>
        "mpn": "<?= /* @escapeNotVerified */  $block->stripTags($block->getProduct()->getMpn()); ?>",
    <?php endif; ?>
    <?php if ($block->getProduct()->getMaterial()): ?>
        "material": "<?= /* @escapeNotVerified */  $block->getAttributeText('material'); ?>",
    <?php endif; ?>
    <?php if ($block->getProduct()->getColor()): ?>
        "color": "<?= /* @escapeNotVerified */  $block->getAttributeText('color'); ?>",
    <?php endif; ?>
    "name": "<?= /* @escapeNotVerified */  $block->escapeQuote($block->stripTags($block->getProduct()->getName())); ?>",
    "sku": "<?= /* @escapeNotVerified */  $block->escapeQuote($block->stripTags($block->getProduct()->getSku())); ?>",
    "description": "<?= /* @escapeNotVerified */  $block->escapeQuote($block->stripTags($block->getDescription())); ?>",
    "image": "<?= /* @escapeNotVerified */  $block->stripTags($block->getImage($block->getProduct(), 'product_base_image')->getImageUrl()); ?>",
    <?php $weight = $block->getProduct()->getWeight(); ?>
    "offers": {
    <?php $weight = null; ?>
    <?php $minWeight = null; ?>
    <?php $maxWeight = null; ?>
    <?php $product = $block->getProduct(); ?>
    <?php if (empty($children)): ?>
        <?php $weight = $product->getWeight(); ?>
            "@type": "Offer",
            "url": "<?= strtok($product->getUrlInStore(), '?'); ?>",
            "price": <?= $pricingHelper->currency($product->getFinalPrice(), false, false); ?>,
            "priceCurrency": "<?= $block->getStore()->getCurrentCurrency()->getCode() ?>",
            <?php if ($product->getFinalPrice() < $product->getPrice() && $product->getSpecialToDate()): ?>
                <?php $priceToDate = date_create($product->getSpecialToDate()); ?>
                "priceValidUntil": "<?= $priceToDate->format('Y-m-d'); ?>",
            <?php endif; ?>
            "priceSpecification": {
        "price": <?= $pricingHelper->currency($product->getFinalPrice(), false, false); ?>,
        "priceCurrency": "<?= $block->getStore()->getCurrentCurrency()->getCode() ?>",
        "valueAddedTaxIncluded": <?= $block->checkTaxIncluded() ?>
        },
            "availability": "http://schema.org/<?= $product->isAvailable() ? 'InStock' : 'OutOfStock'; ?>",
            "itemCondition": "http://schema.org/NewCondition"
    <?php else: ?>
        <?php $minPrice = null; ?>
        <?php $maxPrice = null; ?>
        "@type": "AggregateOffer",
        "priceCurrency": "<?= $block->getStore()->getCurrentCurrency()->getCode() ?>",
        "offerCount": "<?= count($children); ?>",
        "offers": [
            <?php $lastKey = key(array_slice($children, -1, 1, true)); ?>
            <?php foreach ($children as $key => $_product): ?>
                <?php $productFinalPrice = $_product->getFinalPrice(); ?>
                <?php $productWeight = $_product->getWeight(); ?>
                <?php $minPrice = $productFinalPrice < $minPrice || $minPrice === null ? $productFinalPrice : $minPrice; ?>
                <?php $maxPrice = $productFinalPrice > $maxPrice || $maxPrice === null ? $productFinalPrice : $maxPrice; ?>
                <?php $minWeight = $productWeight < $minWeight || $minWeight === null ? $productWeight : $minWeight; ?>
                <?php $maxWeight = $productWeight > $maxWeight || $maxWeight === null ? $productWeight : $maxWeight; ?>
                {
                    "@type": "Offer",
                    "url": "<?= strtok($block->getProduct()->getUrlInStore(), '?'); ?>",
                    "name": "<?= /* @escapeNotVerified */  $block->escapeQuote($_product->getName()); ?>",
                    "sku": "<?= /* @escapeNotVerified */  $block->escapeQuote($_product->getSku()); ?>",
                    "price": <?= $pricingHelper->currency($productFinalPrice, false, false) ?>,
                    "priceCurrency": "<?= $block->getStore()->getCurrentCurrency()->getCode() ?>",
                    "priceSpecification": {
                "price": <?= $pricingHelper->currency($productFinalPrice, false, false) ?>,
                        "priceCurrency": "<?= $block->getStore()->getCurrentCurrency()->getCode() ?>",
                "valueAddedTaxIncluded": <?= $block->checkTaxIncluded() ?>
            },
                    <?php if ($productFinalPrice < $_product->getPrice() && $_product->getSpecialToDate()): ?>
                        <?php $priceToDate = date_create($_product->getSpecialToDate()); ?>
                        "priceValidUntil": "<?= $priceToDate->format('Y-m-d'); ?>",
                    <?php endif; ?>
                    "availability": "http://schema.org/<?= $_product->isAvailable() ? 'InStock' : 'OutOfStock'; ?>",
                    "itemCondition": "http://schema.org/NewCondition"
                }<?= $key == $lastKey ? '' : ','; ?>
            <?php endforeach; ?>
            <?php
            if ($minWeight == $maxWeight) {
                $weight = $minWeight;
                $minWeight = null;
                $maxWeight = null;
            }
            ?>
        ]
        <?php if ($product->getTypeId() == 'bundle'): ?>
            <?php $rangeBundle = $block->getBundlePriceRange($product->getId()); ?>
            <?php $minPrice = $rangeBundle['minPrice']; ?>
            <?php $maxPrice = $rangeBundle['maxPrice']; ?>
        <?php else: ?>
            <?php $minPrice = $pricingHelper->currency($minPrice, false, false); ?>
            <?php $maxPrice = $pricingHelper->currency($maxPrice, false, false); ?>
        <?php endif; ?>
        ,
        "lowPrice": "<?= $minPrice ?>",
        "highPrice": "<?= $maxPrice ?>"
    <?php endif; ?>
    }
    <?php if ($block->getConfig('structureddata/product/include_weight')): ?>
    ,
    "weight": {
        "@type": "QuantitativeValue",
        <?php if (!($weight === null)): ?>"value": "<?= $weight; ?>",<?php endif;?>
        <?php if (!($minWeight === null)): ?>"minValue": "<?= $minWeight; ?>",<?php endif;?>
        <?php if (!($maxWeight === null)): ?>"maxValue": "<?= $maxWeight; ?>",<?php endif;?>
        "unitText": "<?= $block->getConfig('general/locale/weight_unit'); ?>"
    }
    <?php endif; ?>
}
